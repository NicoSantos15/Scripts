console.show();
console.clear();

console.log("> Impacted Work Packages Script");

var nameDiagram = window.prompt("View Name (leave empty to cancel)?", "");

function selectDiagram(diagramName) {
  return $("archimate-diagram-model").filter("." + diagramName).first();
}

function isValidDate(dateStr) {
  return /^\d{4}-\d{2}-\d{2}$/.test(dateStr) && !isNaN(Date.parse(dateStr));
}

function compareDates(start, end) {
  return new Date(start) <= new Date(end);
}

if (nameDiagram != "") {
  var diagram = selectDiagram(nameDiagram);

  $(diagram).find("Work-Package").each(function(wp) {
    const startDate = wp.prop("Work Package Start Date");
    const endDate = wp.prop("Work Package End Date");

    if (!startDate || !isValidDate(startDate)) {
      console.log("Invalid or missing Start Date for:", wp.name);
    }

    if (!endDate || !isValidDate(endDate)) {
      console.log("Invalid or missing End Date for:", wp.name);
    }

    if (isValidDate(startDate) && isValidDate(endDate)) {
      if (!compareDates(startDate, endDate)) {
        console.log("Start Date is after End Date for:", wp.name);
      }
    }

    if ($(wp).outRels("realization-relationship").size() > 0) {
      console.log("\n", wp, "\n");
      $(wp).outRels("realization-relationship").each(function(cap) {
        console.log("\nCapability:", cap.target.name);
        console.log("  Active Impacting Work-Packages:");
        $("." + cap.target.name).inRels("realization-relationship").each(function(relwp) {
          if (
            relwp.source.type === "work-package" &&
            relwp.source.prop("Work Package State") === "Active" &&
            wp.name !== relwp.source.name
          ) {
            console.log("\t -", relwp.source.name);
          }
        });
      });
    }
  });
}

console.log("\n > Impacted Work Packages Script Script");
